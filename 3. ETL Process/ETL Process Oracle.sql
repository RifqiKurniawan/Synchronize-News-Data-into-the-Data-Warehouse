create or replace PROCEDURE  "USP_SYNC_TR_NEWS" AS
V_SQL VARCHAR2(8000);
V_STATUS VARCHAR2(1) := 'Y';
V_SYSDATE DATE := SYSDATE;
BEGIN
--------------------------------------------------------------------------------------------------------------------------------
--DOCUMENTATION--
--------------------------------------------------------------------------------------------------------------------------------
/**
CREATED BY RIFQIK 03-JUN-23
*/
--------------------------------------------------------------------------------------------------------------------------------
--SETTING VARIABLE--
--------------------------------------------------------------------------------------------------------------------------------
V_SQL := 'BEGIN USP_SYS_TRUNCATE_TABLE ( :1); END;';
EXECUTE IMMEDIATE V_SQL USING 'TR_NEWS_TEMP';
--------------------------------------------------------------------------------------------------------------------------------
--STAGING--
--------------------------------------------------------------------------------------------------------------------------------
--INSERT INTO TEMPORARY TABLE--
INSERT INTO TR_NEWS_TEMP
(TITLE,CONTENT,PUBLICATION_DATE,AUTHOR)
SELECT DATE_CREATED,DATE_MODIFIED,SYSDATE-2/24 ,TITLE,CONTENT,PUBLICATION_DATE,AUTHOR 
FROM STAGING_TR_NEWS 
WHERE DATE_CREATED>SYSDATE-2/24 OR DATE_MODIFIED>SYSDATE-2/24;

--COLLECT NEW DATA--
UPDATE TR_NEWS_TEMP
SET ACTION = 1,--VALUE 1 FOR NEW DATA
    CREATED_AT = SYSDATE
WHERE (TITLE,PUBLICATION_DATE) IN 
(SELECT TEMP.TITLE,TEMP.PUBLICATION_DATE 
 FROM TR_NEWS_TEMP TEMP
 LEFT JOIN TR_NEWS MN ON TEMP.TITLE = MN.TITLE AND TEMP.PUBLICATION_DATE = MN.PUBLICATION_DATE
 WHERE MN.TITLE IS NULL);

--COLLECT UPDATE DATA--
UPDATE TR_NEWS_TEMP
SET ACTION = 2,--VALUE 2 FOR UPDATE DATA
    UPDATE_AT = SYSDATE--VALUE 1 FOR NEW DATA
WHERE (TITLE,PUBLICATION_DATE) IN (
SELECT TITLE,PUBLICATION_DATE
FROM(
SELECT TITLE,CONTENT,PUBLICATION_DATE,AUTHOR
FROM TR_NEWS
MINUS
SELECT TITLE,CONTENT,PUBLICATION_DATE,AUTHOR 
FROM TR_NEWS_TEMP
)
);

MERGE INTO TR_NEWS_TEMP TGT 
USING (SELECT A.TITLE,A.PUBLICATION_DATE 
       FROM TR_NEWS A
       INNER JOIN TR_NEWS_TEMP B ON A.TITLE = B.TITLE AND A.PUBLICATION_DATE = B.PUBLICATION_DATE AND B.ACTION=2
)SRC ON (TGT.TITLE = SRC.TITLE AND TGT.PUBLICATION_DATE = SRC.PUBLICATION_DATE)
WHEN MATCHED THEN UPDATE SET TGT.UPDATE_AT = SYSDATE;

--COLLECT DELETE DATA--
UPDATE TR_NEWS_TEMP
SET ACTION = 3,--VALUE 3 FOR DELETE DATA
    DELETE_AT = SYSDATE--VALUE 1 FOR NEW DATA
WHERE (TITLE,PUBLICATION_DATE) IN (
SELECT A.TITLE,B.PUBLICATION_DATE
FROM(
    SELECT STAGING.TITLE,STAGING.PUBLICATION_DATE
    FROM STAGING_TR_NEWS STAGING
    LEFT JOIN ID_STAGING_TR_NEWS ID_STAGING ON STAGING.ID = ID_STAGING.ID
    WHERE ID_STAGING.ID IS NULL
) A
INNER JOIN TR_NEWS B ON A.TITLE = B.TITLE AND A.PUBLICATION_DATE = B.PUBLICATION_DATE
WHERE B.DELETE_AT IS NULL
);

select * from TR_NEWS_VERSION;

truncate table TR_NEWS
--------------------------------------------------------------------------------------------------------------------------------
--MAIN--
-------------------------------------------------------------------------------------------------------------------------------- 
MERGE INTO TR_NEWS TGT USING(
SELECT CREATED_AT,UPDATE_AT,DELETE_AT,TITLE,CONTENT,PUBLICATION_DATE,AUTHOR 
FROM TR_NEWS_TEMP
)SRC ON (TGT.TITLE = SRC.TITLE AND TGT.PUBLICATION_DATE = SRC.PUBLICATION_DATE)
WHEN MATCHED THEN UPDATE SET 
     TGT.CREATED_AT=CREATED_AT,
     TGT.UPDATE_AT=UPDATE_AT,
     TGT.DELETE_AT = SRC.DELETE_AT,
     TGT.CONTENT = SRC.CONTENT,
     TGT.AUTHOR = SRC.AUTHOR
WHEN NOT MATCHED THEN INSERT (TGT.CREATED_AT,TGT.UPDATE_AT,TGT.DELETE_AT,TGT.TITLE,TGT.CONTENT,TGT.PUBLICATION_DATE,TGT.AUTHOR)
VALUES (SRC.CREATED_AT,SRC.UPDATE_AT,SRC.DELETE_AT,SRC.TITLE,SRC.CONTENT,SRC.PUBLICATION_DATE,SRC.AUTHOR);

UPDATE TR_NEWS_VERSION
SET END_DATE = V_SYSDATE-1/24/60/60
WHERE (TITLE,PUBLICATION_DATE) IN (
SELECT TITLE,PUBLICATION_DATE
FROM TR_NEWS_TEMP WHERE ACTION IS NOT NULL
) AND END_DATE IS NULL;
COMMIT;

INSERT INTO TR_NEWS_VERSION
(ID_SOURCE, START_DATE, STATUS, TITLE, CONTENT, PUBLICATION_DATE, AUTHOR
)  
SELECT B.ID ID_SOURCE, SYSDATE START_DATE, CASE WHEN A.ACTION = 3 THEN 'N' ELSE 'Y' END STATUS, A.TITLE, A.CONTENT, A.PUBLICATION_DATE, A.AUTHOR
FROM TR_NEWS_TEMP A
INNER JOIN TR_NEWS B ON A.TITLE = B.TITLE AND A.PUBLICATION_DATE = B.PUBLICATION_DATE
WHERE ACTION IS NOT NULL;
--------------------------------------------------------------------------------------------------------------------------------
--ENDPROCESS--
--------------------------------------------------------------------------------------------------------------------------------
COMMIT;
END;
